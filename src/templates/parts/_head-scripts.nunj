{% macro headScripts() %}
	<script type="text/javascript">
		;(function(){
			var modificators = [],
				nv = navigator,
				pl = nv.platform.toLowerCase(),
				ua = nv.userAgent.toLowerCase(),
				an = nv.appName.toLowerCase(),
				htmlElement = document.documentElement,
				ls = localStorage;

			function pli(s){return pl.indexOf(s) > -1;}
			function uai(s){return ua.indexOf(s) > -1;}
			function ani(s){return an.indexOf(s) > -1;}

			// Platform
			var platformClass = uai('iphone') || uai('ipod') || uai('ipad') || uai('android') || uai('iemobile') || uai('blackberry') || uai('bada') ? '_mobile' : '_desktop';
			modificators.push(platformClass);

			// OS
			var osClass = '';
			if (uai('ipad') || uai('iphone') || uai('ipod')) {
				osClass = '_ios';
			} else if (uai('android')) {
				osClass = '_android';
			} else if (pli('win')) {
				osClass = '_win';
			} else if (pli('mac')) {
				osClass = '_mac';
			} else if (pli('linux')) {
				osClass = '_linux';
			}
			modificators.push(osClass);

			// Browser
			var browserClass = '';
			if (uai('firefox')) {
				browserClass = '_ff';
			} else if (uai('opr')) {
				browserClass = '_opera';
			} else if (uai('yabrowser')) {
				browserClass = '_yandex';
			} else if (uai('edge')) {
				browserClass = '_edge';
			} else if (uai('trident') || ani('explorer') || ani('msie')) {
				browserClass = '_ie';
			} else if (uai('safari') && !uai('chrome')) {
				browserClass = '_safari';
			} else if (uai('chrome')) {
				browserClass = '_chrome';
			}
			modificators.push(browserClass);

			window.environmentObject = {
				platform: platformClass,
				os: osClass,
				browser: browserClass,
			};
			htmlElement.className += ' ' + modificators.join(' ');

			// SVG sprites
			var xhr = new XMLHttpRequest();
			xhr.open('GET', 'media/svg/sprite.svg', true);
			xhr.overrideMimeType('image/svg+xml');

			xhr.onreadystatechange = function() {
				if (xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {
					var container = document.createElement('div');
					container.className = 'invisible-container';
					container.appendChild(xhr.responseXML.documentElement);

					function waitForBody() {
						if (document.body) {
							document.body.appendChild(container);
						} else {
							setTimeout(waitForBody, 16)
						}
					}

					waitForBody();
				};
			}

			xhr.send('');

			// Fix 100vh bug on iPhoneX
			// and other mobile devices
			if (localStorage && localStorage.getItem('fix100vhValue')) {
				document.documentElement.classList.add('_fix100vh');
				typeof document.documentElement.style.setProperty === 'function' && document.documentElement.style.setProperty('--fix100vhValue', localStorage.getItem('fix100vhValue') + 'px');
			} else {
				var waitForBody = function() {
					if (document.body) {
						var tolerance = 10;
						var check100vhElem = document.createElement('div');
						var check100vhElemStyle = check100vhElem.style;
						check100vhElemStyle.visibility = 'hidden';
						check100vhElemStyle.position = 'absolute';
						check100vhElemStyle.left = '0';
						check100vhElemStyle.top = '0';
						check100vhElemStyle.width = '1px';
						check100vhElemStyle.height = '100vh';
						document.body.appendChild(check100vhElem);
						var real100vhHeight = check100vhElem.clientHeight;
						check100vhElem.parentNode.removeChild(check100vhElem);
						var delta = real100vhHeight - window.innerHeight;
						if (Math.abs(delta) > tolerance) {
							document.documentElement.classList.add('_fix100vh');
							typeof document.documentElement.style.setProperty === 'function' && document.documentElement.style.setProperty('--fix100vhValue', delta + 'px');
							if (localStorage) {
								localStorage.setItem('fix100vhValue', delta);
							}
						}
					} else {
						setTimeout(waitForBody, 16)
					}
				}
				waitForBody();
			}
		})();
	</script>
{% endmacro %}